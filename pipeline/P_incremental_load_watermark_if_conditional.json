{
	"name": "P_incremental_load_watermark_if_conditional",
	"properties": {
		"activities": [
			{
				"name": "LookupOldWaterMarkActivity",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select TableName, WatermarkValue\nfrom dbo.watermarktable\nwhere TableName = 'data_source_table'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_azuresqldb_oltp",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "LookupNewWaterMarkActivity",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select MAX(LastModifytime) as NewWatermarkvalue\nfrom dbo.data_source_table",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_azuresqldb_oltp",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "CheckforNewDate",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "LookupOldWaterMarkActivity",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LookupNewWaterMarkActivity",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('LookupOldWaterMarkActivity').output.firstRow.WatermarkValue,activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkValue)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "IncrementalCopy",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "select *\nfrom dbo.data_source_table\nwhere LastModifytime > '@{activity('LookupOldWaterMarkActivity').output.firstRow.WatermarkValue}'\nand LastModifytime <= '@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ds_azuresqldb_oltp",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ds_json_datalake_dynamic",
									"type": "DatasetReference",
									"parameters": {
										"directory_name": {
											"value": "@{activity('LookupOldWaterMarkActivity').output.firstRow.TableName}",
											"type": "Expression"
										},
										"file_name": {
											"value": "@CONCAT('Incremental-',pipeline().RunId, '.json')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "UpdateWriteWatermarkActivity",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "IncrementalCopy",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_write_watermark]",
								"storedProcedureParameters": {
									"LastModifiedtime": {
										"value": {
											"value": "@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}",
											"type": "Expression"
										},
										"type": "Datetime"
									},
									"TableName": {
										"value": {
											"value": "@{activity('LookupOldWaterMarkActivity').output.firstRow.TableName}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSqlDBOLTP",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "WebSendEmailSuccess",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "CheckforNewDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://prod-29.eastus.logic.azure.com:443/workflows/4f5eeb32c59e4ed2bb6163ad9afdbd15/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=COwbfB_3g0bRfkC7eRZVL5bUw2ZV0eTny5ougjhQ1GE",
					"method": "POST",
					"headers": {
						"Content-Type": "application/json"
					},
					"body": {
						"message": "Success",
						"dataFactoryName": "@{pipeline().DataFactory}",
						"pipelineName": "@{pipeline().Pipeline}",
						"receiver": "sf_renato@hotmail.com"
					}
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2021-06-26T19:33:10Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}